create table tbl_employee(eid number(10),ename varchar2(20),esalary number(10));
desc tbl_employee;
insert into tbl_employee values(101,'lakshmipathi',12345);
insert into tbl_employee values(102,'shiva',16745);
insert into tbl_employee values(103,'prasad',40000);
insert into tbl_employee values(104,'omsai',5000);
commit;
select * from tbl_employee;
-- drop table tbl_employee;
insert into tbl_employee(eid,esalary) values(105,8000);
insert into tbl_employee values(106,null,4000);
select * from tbl_employee;
commit;
select eid ,esalary from tbl_employee;
select *from tbl_employee where eid=101;
select *from tbl_employee where eid!=101;
select *from  tbl_employee where esalary>=14000;
select *from tbl_employee where ename is null;

-- In operator to display the present records in table

select *from tbl_employee where eid in (101,105,108);

-- NOT  In operator to display the other  records in table
select *from tbl_employee where eid not  in (101,105,108);

--LOGICAL AND

select *from tbl_employee where eid   in (101,105,108) and ename is null;

--LOGICAL OR

select *from tbl_employee where eid   in (101,105,108) or ename is null;

--BETWEEN
select *from tbl_employee where esalary  between 5000 and 15000;

--NOT BETWEEN
select *from tbl_employee where esalary not between 5000 and 15000;

--LIKE OPERATOR
select *from tbl_employee where ename like '_a%';

--NOT LIKE OPERATOR
select *from tbl_employee where ename not like '_a%';

SELECT *FROM TBL_EMPLOYEE;
COMMIT;

DELETE FROM TBL_EMPLOYEE;
ROLLBACK;
SELECT *FROM TBL_EMPLOYEE;
COMMIT;

--DELETE QUERY

DELETE FROM TBL_EMPLOYEE WHERE EID=103;

DELETE FROM TBL_EMPLOYEE WHERE ENAME LIKE '_a%';
rollback;

--UPDATE QUERY

update tbl_employee set esalary=10000 where eid=102;
select *from tbl_employee;

--DISTINCT IS USED TO REMOVE DUPLICATES FROM THE COLUMN

SELECT DISTINCT ESALARY FROM TBL_EMPLOYEE;

--ALTER keyword is used to modify the table structure
alter table tbl_employee add doj date;

desc tbl_employee;

select sysdate from dual;

select sysdate from tbl_employee;


select eid,ename,esalary+143 from tbl_employee;

--alter drop a column
alter table tbl_employee drop column doj;
select *from tbl_employee;

--alter modify a data type of a column
alter table tbl_employee modify esalary number(25,5);
desc tbl_employee;

--alter rename the column name 
alter table tbl_employee rename column esalary to emp_salary;
desc tbl_employee;

rename tbl_employee to tbl_my_employee;

desc tbl_my_employee;

create table tbbl_employee as select *from tbl_my_employee;

select *from tbbl_employee;

truncate table tbl_my_employee;
desc tbl_my_employee;

drop table tbl_my_employee;

rename tbbl_employee to tbl_employee;

select *from tbl_employee;

alter table tbl_employee add dno number(5);

update  tbl_employee set dno=10 where eid in (101,103,105);
update  tbl_employee set dno=20 where eid not in (101,103,105);

--GROUP BY CLAUSE

select dno,count(*) from tbl_employee group by dno;

select dno,count(*),sum(emp_salary),min(emp_salary),max(emp_salary),avg(emp_salary) from tbl_employee group by dno;

select dno,count(*) from tbl_employee group by dno having min(emp_salary)>0;

---Alias names
select dno,count(*) as "total no of employees" from tbl_employee group by dno;

--ORDER BY

select *from tbl_employee order by eid;
-----------------------------------------------JOINS---------------------------------------------------------

create table tbl_agents(agent_code number(10),agent_name varchar2(20),working_area varchar2(20));
create table tbl_customers(customer_code number(10),customer_name varchar2(20),customer_area varchar2(20));
desc  tbl_agents;
desc  tbl_customers;

insert into tbl_agents  values(101,'agent1','chennai');
insert into tbl_agents  values(102,'agent2','chennai');
insert into tbl_agents  values(103,'agent3','bengaluru');
insert into tbl_agents  values(104,'agent4','benagluru');
 select *from tbl_agents;
insert into tbl_customers values(101,'customer1','chennai');
insert into tbl_customers values(102,'customer2','chennai');
insert into tbl_customers values(103,'customer3','chennai');
insert into tbl_customers values(104,'customer4','bengaluru');
insert into tbl_customers values(105,'customer5','bengaluru');
--  drop table tbl_customers;
-- drop table tbl_agents;;
select *from tbl_customers;

-----------------------inner join
select tbl_agents.agent_name,tbl_customers.customer_name,tbl_customers.customer_area from 
tbl_agents,tbl_customers where tbl_agents.working_area=tbl_customers.customer_area;

------------------------EQUI INNER JOIN USING EQUAL 
select a.agent_name,c.customer_name,c.customer_area from tbl_agents a join tbl_customers c on a.working_area=c.customer_area;

----------------------NON-EQUI JOIN NOT USING EQUAL SYMBOL

select a.agent_name,c.customer_name,c.customer_area from tbl_agents a join tbl_customers c on a.working_area!=c.customer_area;

----------------------------LEFT OUTER JOIN
select *from tbl_agents left outer join tbl_customers on tbl_agents.working_area=tbl_customers.customer_area;

-------------------------RIGHT OUTER JOIN
select *from tbl_agents RIGHT outer join tbl_customers on tbl_agents.working_area=tbl_customers.customer_area;

SeLECT * FROM TBL_AGENTS,TBL_CUSTOMERS WHERE tbl_agents.working_area(+)=tbl_customers.customer_area;

---------------------------FULL OUTER JOIN

select *from tbl_agents full outer join tbl_customers on tbl_agents.working_area=tbl_customers.customer_area;

------------------------------SELF JOIN 
SELECT A.AGENT_CODE,B.AGENT_NAME FROM TBL_AGENTS A,TBL_AGENTS B WHERE A.WORKING_AREA=B.WORKING_AREA;

----------------------------CROSS JOIN
SELECT A.AGENT_CODE,B.CUSTOMER_NAME FROM TBL_AGENTS A CROSS TBL_CUSTOMERS B ;

-----------------------SUB QUERY
SELECT *FROM TBL_AGENTS WHERE WORKING_AREA=(SELECT CUSTOMER_AREA FROM TBL_CUSTOMERS WHERE CUSTOMER_CODE=101);

SELECT *FROM TBL_CUSTOMERS WHERE CUSTOMER_AREA=(SELECT WORKING_AREA FROM TBL_AGENTS WHERE AGENT_NAME='agent1');

-------for multi row sub query we need to use the "in" to get the output
SELECT *FROM TBL_CUSTOMERS WHERE CUSTOMER_AREA in (SELECT WORKING_AREA FROM TBL_AGENTS WHERE AGENT_NAME='agent1' or agent_name='agent3');

-----------SEQUENCE

CREATE SEQUENCE SEQ_EMP_ID START WITH 1000 INCREMENT BY 1;


SELECT SEQ_EMP_ID.NEXTVAL FROM DUAL;

-------------------------------------------------VIEW------------------------------

CREATE TABLE EMPLOYEE(EID NUMBER(10),ENAME VARCHAR2(20),ESALARY NUMBER(10));
insert into employee values(1001,'koushik',10000);
insert into employee values(100,'shiva',10234);
insert into employee values(1002,'omsai',12345);
insert into employee values(102,'aditya',23456);

create view view_employee as select *from employee where esalary>10000;

select *from view_employee;

update view_employee set esalary=20000 where eid=102;

select *from employee;

delete from view_employee where eid=102;













